---
- name: Ensure vm_config and vm.value.ci are dictionaries
  set_fact:
    vm_config: "{{ vm_config | default({}) }}"
    vm_value_ci: "{{ vm.value.get('ci', {}) }}"

- name: Update VM configuration VM-{{ vm.key }}
  vars:
    set_name: >-
      {{ ' --name "' + vm.value.name + '" '
         if vm.value.name | default('') | length > 0 and
            vm.value.name | default('') != vm_config.get('name', '')
         else '' }}
    delete_name: >-
      {{ 'name,' if vm.value.name | default('') | length == 0 and
                    vm_config.get('name', '') | length > 0 else '' }}

    set_cores: >-
      {{ ' --cores ' + (vm.value.cores | default(vm_defaults_cores) | string)
         if (vm.value.cores | default(vm_defaults_cores)) != (vm_config.get('cores', 1)) else '' }}

    set_cpu: >-
      {{ ' --cpu ' + (vm.value.cpu | default(vm_defaults_cpu) | string)
         if (vm.value.cpu | default(vm_defaults_cpu)) != (vm_config.get('cpu', 1)) else '' }}

    set_sockets: >-
      {{ ' --sockets ' + (vm.value.sockets | default(vm_defaults_sockets) | string)
         if (vm.value.sockets | default(vm_defaults_sockets)) != (vm_config.get('sockets', 1)) else '' }}

    set_memory: >-
      {{ ' --memory ' + (vm.value.memory | default(vm_defaults_memory) | string)
         if (vm.value.memory | default(vm_defaults_memory)) != (vm_config.get('memory', 512)) else '' }}

    set_agent: >-
      {{ ' --agent ' + (vm.value.agent | default(vm_defaults_agent) | ternary(1, 0) | string)
         if (vm.value.agent | default(vm_defaults_agent) | ternary('1', '0')) != (vm_config.get('agent', '0')) else '' }}

    set_onboot: >-
      {{ ' --onboot ' + (vm.value.onboot | default(vm_defaults_onboot) | ternary(1, 0) | string)
         if (vm.value.onboot | default(vm_defaults_onboot) | ternary(1, 0)) != (vm_config.get('onboot', 0)) else '' }}

    set_scsihw: >-
      {{ ' --scsihw ' + (vm.value.scsihw | default(vm_defaults_scsihw))
         if (vm.value.scsihw | default(vm_defaults_scsihw)) != (vm_config.get('scsihw', '')) else '' }}

    vm_tags: "{{ (vm.value.tags | default([]) + [managed_by_ansible_tag]) | sort | join(';') }}"
    set_tags: >-
      {{ ' --tags ' + vm_tags
         if vm_tags != '' and vm_tags != (vm_config.get('tags', '')) else '' }}

    set_vga: >-
      {{ ' --vga ' + (vm.value.vga | default(vm_defaults_vga))
         if (vm.value.vga | default(vm_defaults_vga)) != (vm_config.get('vga', '')) else '' }}

    set_ci_user: >-
      {{ ' --ciuser "' + vm_value_ci.get('user', '') + '" '
         if vm_value_ci.get('user', '') | length > 0 and
            vm_value_ci.get('user', '') != vm_config.get('ciuser', '') else '' }}

    delete_ci_user: >-
      {{ 'ciuser,' if vm_value_ci.get('user', '') | length == 0 and
                     vm_config.get('ciuser', '') | length > 0 else '' }}

    set_ci_password: >-
      {{ ' --cipassword "' + vm_value_ci.get('password', '') + '" '
         if vm_value_ci.get('password', '') | length > 0 and
            (vm_config.get('cipassword', '') | length == 0 or
             vm_value_ci.get('forcepassword', false))
         else '' }}

    delete_ci_password: >-
      {{ 'cipassword,' if vm_value_ci.get('password', '') | length == 0 and
                        vm_config.get('cipassword', '') | length > 0 else '' }}

    set_ssh_keys: >-
      {{ ' --sshkeys "' + (vm_value_ci.get('ssh_keys', '') | urlencode | replace('/', '%2f')) + '" '
         if vm_value_ci.get('ssh_keys', '') | length > 0 and
            (vm_value_ci.get('ssh_keys', '') | urlencode | replace('/', '%2f')) !=
            (vm_config.get('sshkeys', '') | string)
         else '' }}

    delete_ssh_keys: >-
      {{ 'sshkeys,' if vm_value_ci.get('ssh_keys', '') | length == 0 and
                     vm_config.get('sshkeys', '') | string | length > 0 else '' }}

    set_nameserver: >-
      {{ ' --nameserver "' + vm_value_ci.get('nameserver', '') + '" '
         if vm_value_ci.get('nameserver', '') | length > 0 and
            vm_value_ci.get('nameserver', '') != vm_config.get('nameserver', '') else '' }}

    delete_nameserver: >-
      {{ 'nameserver,' if vm_value_ci.get('nameserver', '') | length == 0 and
                        vm_config.get('nameserver', '') | length > 0 else '' }}

    set_searchdomain: >-
      {{ ' --searchdomain "' + vm_value_ci.get('searchdomain', '') + '" '
         if vm_value_ci.get('searchdomain', '') | length > 0 and
            vm_value_ci.get('searchdomain', '') != vm_config.get('searchdomain', '') else '' }}

    delete_searchdomain: >-
      {{ 'searchdomain,' if vm_value_ci.get('searchdomain', '') | length == 0 and
                          vm_config.get('searchdomain', '') | length > 0 else '' }}

    to_delete: >-
      {{ delete_name }}{{ delete_ci_user }}{{ delete_ci_password }}
      {{ delete_ssh_keys }}{{ delete_nameserver }}{{ delete_searchdomain }}

    delete_cfg: >-
      {{ ' --delete ' + to_delete if to_delete | trim != '' else '' }}

    to_update: >-
      {{ set_name }}{{ set_cores }}{{ set_cpu }}{{ set_sockets }}
      {{ set_memory }}{{ set_agent }}{{ set_onboot }}{{ set_scsihw }}
      {{ set_ci_user }}{{ set_ci_password }}{{ set_ssh_keys }}
      {{ set_nameserver }}{{ set_searchdomain }}{{ set_tags }}
      {{ delete_cfg }}
  ansible.builtin.command: >-
    pvesh create /nodes/{{ ansible_facts.hostname }}/qemu/{{ vm.key }}/config {{ to_update | trim }}
  when: to_update | trim != ''
  changed_when: true
