---
- name: Create new container
  vars:
    netcfg: "{% for netdev in container.network_devices %}
      --{{ netdev.id }} name={{ netdev.name }},\
      bridge={{ netdev.bridge }},\
      firewall={{ netdev.firewall | default(container_defaults.netdev_firewall) | ternary(1, 0) }},\
      ip={{ netdev.ip }},\
      gw={{ netdev.gateway }}\
      {{ ',tag=' + netdev.vlan_tag | string if netdev.vlan_tag is defined else '' }}
      {% endfor %}"
    container_tags: "{{ '--tags ' + (container.tags | default([]) + [managed_by_ansible_tag]) | join(',') }}"
    nameserver: "{{ '--nameserver ' + container.nameserver if container.nameserver is defined else '' }}"
    searchdomain: "{{ '--searchdomain ' + container.searchdomain if container.searchdomain is defined else '' }}"
  ansible.builtin.shell: >-
    pvesh create /nodes/{{ ansible_facts.hostname }}/lxc
    --vmid {{ container.vmid }}
    --ostemplate {{ container.template.storage }}:vztmpl/{{ container.template.name }}
    --hostname {{ container.hostname }}
    --password {{ container.password }}
    --ssh-public-keys "{{ container.ssh_keys }}"
    --cores {{ container.cores | default(container_defaults.cores) }}
    --memory {{ container.memory | default(container_defaults.memory) }}
    --swap {{ container.swap | default(container_defaults.swap) }}
    --rootfs {{ container.rootfs.storage }}:{{ container.rootfs.size }}
    --features nesting={{ container.nesting | default(container_defaults.nesting) | ternary(1, 0) }}
    --onboot {{ container.onboot | default(container_defaults.onboot) | ternary(1, 0) }}
    --unprivileged {{ container.unprivileged | default(container_defaults.unprivileged) | ternary(1, 0) }}
    --timezone {{ container.timezone | default(container_defaults.timezone) }}
    --start {{ container.start | default(container_defaults.start) | ternary(1, 0) }}
    {{ nameserver }}
    {{ searchdomain }}
    {{ container_tags }}
    {{ netcfg }}
  changed_when: true
